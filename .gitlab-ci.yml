stages:
  - test
  - push-notify
  - test-notify

telegram_test:
  stage: test
  tags: [default]
  script:
    - echo "Running Telegram Test..."
    # To simulate failure, uncomment the next line
    # - exit 1
    - echo "Telegram Test results" > telegram-test.txt
  artifacts:
    paths:
      - telegram-test.txt
    expire_in: 1 hour
    when: always

telegram_push_notify:
  stage: push-notify
  image: telegram-messenger:latest
  tags: [default]
  script:
    - echo "Sending Telegram push notification..."
    - /notify.sh > push_response.log 2>&1
    - grep -o '"message_id":[0-9]*' /tmp/telegram_response.txt | grep -o '[0-9]*' > message_id.txt || echo "0" > message_id.txt
  artifacts:
    paths:
      - message_id.txt
    expire_in: 1 hour
  variables:
    CHAT_ID: ${DEVTEAM_ID}
    THREAD_ID: ${DEPLOY_ID}
    PUSH: "TRUE"
  when: always

telegram_test_notify:
  stage: test-notify
  image: telegram-messenger:latest
  tags: [default]
  dependencies:
    - telegram_test
    - telegram_push_notify
  before_script:
    - |
      if [ -f "telegram-test.txt" ]; then
        export FILE="telegram-test.txt"
        export TEXT="✔️ Telegram Test Job Succeeded!"
      else
        export TEXT="❌ Telegram Test Job Failed!"
      fi
    - export REPLY_ID=$(cat message_id.txt 2>/dev/null || echo "")
  script:
    - |
      if [ -f "telegram-test.txt" ]; then
        echo "Test job succeeded. Sending Telegram Test results file as reply..."
      else
        echo "Test job failed. Sending failure telegram notification as reply..."
      fi
    - /notify.sh
  variables:
    CHAT_ID: ${DEVTEAM_ID}
    THREAD_ID: ${TEST_ID}
  when: always
